using System;
using System.IO;
using NUnit.Framework;
using static Assets.Scripts.Global;

namespace Assets.EditorTests
{
    [TestFixture]
    public class freadTest
    {
        private string testFile;

        [SetUp]
        public void SetUp()
        {
            testFile = Path.GetTempFileName();
        }

        [TearDown]
        public void TearDown()
        {
            if (File.Exists(testFile))
            {
                File.Delete(testFile);
            }
        }

        [Test]
        public void TestOpenReadMode()
        {
            using (var stream = fopen(testFile, "r"))
            {
                Assert.IsNotNull(stream);
                Assert.IsTrue(stream.CanRead);
                Assert.IsFalse(stream.CanWrite);
            }
        }

        // Add test cases for other modes: "w", "a", "r+", "w+", "a+"

        [Test]
        public void TestInvalidMode()
        {
            Assert.Throws<ArgumentException>(() => fopen(testFile, "invalid"));
        }

        [Test]
        public void TestNonExistentFile()
        {
            string nonExistentFile = Path.Combine(Path.GetTempPath(), "nonexistentfile.txt");
            Assert.IsNull(fopen(nonExistentFile, "r"));
        }
    }
}
